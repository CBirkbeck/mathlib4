name: Add "ready-to-merge" and "delegated" label

# triggers the action when
on:
  repository_dispatch:
    types: [bors-command]

jobs:
  add_ready_to_merge_label:
    # we set some variables from the dispatched payload
    env:
      AUTHOR: ${{ github.event.client_payload.author }}
    name: Add ready-to-merge or delegated label
    runs-on: ubuntu-latest
    if: github.repository == 'leanprover-community/mathlib4'
    steps:
      - name: Set merge or delegate outputs from payload
        id: merge_or_delegate
        run: |
          # Get values from the dispatched payload
          m_or_d="${{ github.event.client_payload.mOrD }}"
          remove_labels="${{ github.event.client_payload.removeLabels }}"
          bot="${{ github.event.client_payload.bot }}"

          printf $'"bors delegate" or "bors merge" found? \'%s\'\n' "${m_or_d}"
          printf $'"bors r-" or "bors d-" found? \'%s\'\n' "${remove_labels}"
          printf $'AUTHOR: \'%s\'\n' "${AUTHOR}"
          printf $'PR_NUMBER: \'%s\'\n' "${{ github.event.client_payload.pr_number }}"

          printf $'mOrD=%s\n' "${m_or_d}" >> "${GITHUB_OUTPUT}"
          printf $'removeLabels=%s\n' "${remove_labels}" >> "${GITHUB_OUTPUT}"
          printf $'bot=%s\n' "${bot}" >> "${GITHUB_OUTPUT}"

      - name: Check whether user is a mathlib admin
        id: user_permission
        if: ${{ ! steps.merge_or_delegate.outputs.mOrD == '' || ! steps.merge_or_delegate.outputs.removeLabels == '' }}
        uses: actions-cool/check-user-permission@7b90a27f92f3961b368376107661682c441f6103 # v2.3.0
        with:
          require: 'admin'

      - name: Add ready-to-merge or delegated label
        id: add_label
        if: ${{ ! steps.merge_or_delegate.outputs.mOrD == '' &&
          ( steps.user_permission.outputs.require-result == 'true' ||
            steps.merge_or_delegate.outputs.bot == 'true' ) }}
        uses: octokit/request-action@dad4362715b7fb2ddedf9772c8670824af564f0d # v2.4.0
        with:
          route: POST /repos/:repository/issues/:issue_number/labels
          repository: ${{ github.repository }}
          issue_number: ${{ github.event.client_payload.pr_number }}
          labels: '["${{ steps.merge_or_delegate.outputs.mOrD }}"]'
        env:
          GITHUB_TOKEN: ${{ secrets.TRIAGE_TOKEN }}

      - if: ${{ ! steps.merge_or_delegate.outputs.mOrD == '' &&
          ( steps.user_permission.outputs.require-result == 'true' ||
            steps.merge_or_delegate.outputs.bot == 'true' ) }}
        id: remove_labels
        name: Remove "awaiting-author" and "maintainer-merge"
        # we use curl rather than octokit/request-action so that the job won't fail
        # (and send an annoying email) if the labels don't exist
        run: |
          for label in awaiting-author maintainer-merge; do
            curl --request DELETE \
              --url "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.client_payload.pr_number }}/labels/${label}" \
              --header 'authorization: Bearer ${{ secrets.TRIAGE_TOKEN }}'
          done

      - name: On bors r/d-, remove ready-to-merge or delegated label
        if: ${{ ! steps.merge_or_delegate.outputs.removeLabels == '' &&
          steps.user_permission.outputs.require-result == 'true' }}
        # we use curl rather than octokit/request-action so that the job won't fail
        # (and send an annoying email) if the labels don't exist
        run: |
          for label in ready-to-merge delegated; do
            curl --request DELETE \
              --url "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.client_payload.pr_number }}/labels/${label}" \
              --header 'authorization: Bearer ${{ secrets.TRIAGE_TOKEN }}'
          done

      - name: Set up Python
        if: ${{ ! steps.merge_or_delegate.outputs.mOrD == '' &&
          ( steps.user_permission.outputs.require-result == 'true' ||
            steps.merge_or_delegate.outputs.bot == 'true' ) }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.x'

      - name: Install dependencies
        if: ${{ ! steps.merge_or_delegate.outputs.mOrD == '' &&
          ( steps.user_permission.outputs.require-result == 'true' ||
            steps.merge_or_delegate.outputs.bot == 'true' ) }}
        run: |
          python -m pip install --upgrade pip
          pip install zulip

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: |
            scripts/zulip_emoji_reactions.py

      - name: update zulip emoji reactions
        if: ${{ ! steps.merge_or_delegate.outputs.mOrD == '' &&
          ( steps.user_permission.outputs.require-result == 'true' ||
            steps.merge_or_delegate.outputs.bot == 'true' ) }}
        env:
          ZULIP_API_KEY: ${{ secrets.ZULIP_API_KEY }}
          ZULIP_EMAIL: github-mathlib4-bot@leanprover.zulipchat.com
          ZULIP_SITE: https://leanprover.zulipchat.com
        run: |
          python scripts/zulip_emoji_reactions.py "$ZULIP_API_KEY" "$ZULIP_EMAIL" "$ZULIP_SITE" "${{ steps.merge_or_delegate.outputs.mOrD }}" "${{ steps.merge_or_delegate.outputs.mOrD }}" "${{ github.event.client_payload.pr_number }}"
