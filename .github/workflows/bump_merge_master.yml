name: Bump Merge Master

on:
  schedule:
    - cron: '0 */2 * * *'  # Runs every 2 hours

jobs:
  bump-merge:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Fetch all branches
      run: git fetch --all

    - name: Find the newest bump branch
      id: find-bump-branch
      run: |
        BUMP_BRANCH=$(git branch -r | grep 'bump/v4' | sed 's|origin/||' | sort -V | tail -n 1)
        echo "bump_branch=$BUMP_BRANCH" >> "$GITHUB_OUTPUT"

    - name: Checkout the bump branch
      run: git checkout "${{ steps.find-bump-branch.outputs.bump_branch }}"

    - name: Merge master into bump branch
      id: merge-master
      run: |
        git merge origin/master || echo "Merge conflicts detected" > merge_conflicts.txt

    - name: Check for merge conflicts
      id: check-conflicts
      run: |
        if [ -f merge_conflicts.txt ]; then
          git diff --name-only --diff-filter=U > conflict_files.txt
          if [ "$(wc -l < conflict_files.txt)" -eq 1 ] && grep -q 'lean-toolchain' conflict_files.txt; then
            git checkout --ours lean-toolchain
            git add lean-toolchain
            git commit -m "Resolved conflict in lean-toolchain"
          else
            echo "multiple_conflicts=true" >> "$GITHUB_ENV"
          fi
        fi

    - name: Commit and create PR for multiple conflicts
      if: ${{ env.multiple_conflicts == 'true' }}
      run: |
        DATE=$(date +'%Y-%m-%d-%H-%M')
        NEW_BRANCH="bump-merge-master-$DATE"
        git checkout -b "$NEW_BRANCH"
        git add -A
        git commit -m "Committing conflicting files as is"
        git push origin "$NEW_BRANCH"
        BUMP_BRANCH="${{ steps.find-bump-branch.outputs.bump_branch }}"
        PR_URL=$(gh pr create --title "nightly-testing: resolve conflicts with master" --base "$BUMP_BRANCH")
        PR_NUMBER=$(echo "$PR_URL" | grep -oP '\d+$')
        echo "new_branch=$NEW_BRANCH" >> "$GITHUB_ENV"
        echo "pr_number=$PR_NUMBER" >> "$GITHUB_ENV"

    - name: Push changes if merge was successful
      if: ${{ success() && env.multiple_conflicts != 'true' }}
      run: |
        git push origin "${{ steps.find-bump-branch.outputs.bump_branch }}"

    - name: Send message on Zulip about merge conflicts
      if: ${{ failure() || env.multiple_conflicts == 'true' }}
      uses: zulip/github-actions-zulip/send-message@v1
      with:
        api-key: ${{ secrets.ZULIP_API_KEY }}
        email: 'github-mathlib4-bot@leanprover.zulipchat.com'
        organization-url: 'https://leanprover.zulipchat.com'
        to: 'nightly-testing'
        type: 'stream'
        topic: "merge master into 'bump/${{ steps.find-bump-branch.outputs.bump_branch }}'"
        content: |
          ❌ A bot failed to merge 'master' into 'bump/${{ steps.find-bump-branch.outputs.bump_branch }}' because of merge conflicts.
          The bot created the following PR instead:

          > nightly-testing: resolve conflicts with master #${{ env.pr_number }}
          > branch: `${{ env.new_branch }}`

          Please help with one of the following:
          - resolve the merge conflicts and push them to the branch
          - review the PR (at the end of the month it will end up in `master` without further review)
