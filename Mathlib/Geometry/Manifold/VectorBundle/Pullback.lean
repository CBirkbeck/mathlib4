/-
Copyright (c) 2023 Floris van Doorn, Heather Macbeth. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Floris van Doorn, Heather Macbeth
-/
import Mathlib.Geometry.Manifold.ContMDiffMap
import Mathlib.Geometry.Manifold.VectorBundle.Basic

/-! # Pullbacks of smooth vector bundles

This file defines pullbacks of smooth vector bundles over a smooth manifold.

## Main definitions

* `SmoothVectorBundle.pullback`: For a smooth vector bundle `E` over a manifold `B` and a smooth
  map `f : B' Рєњ B`, the pullback vector bundle `f *рхќ E` is a smooth vector bundle.

-/

open Bundle Set
open scoped Manifold

variable {­ЮЋю B B' : Type*} (F : Type*) (E : B Рєњ Type*)
variable [NontriviallyNormedField ­ЮЋю] [Рѕђ x, AddCommMonoid (E x)] [Рѕђ x, Module ­ЮЋю (E x)]
  [NormedAddCommGroup F] [NormedSpace ­ЮЋю F] [TopologicalSpace (TotalSpace F E)]
  [Рѕђ x, TopologicalSpace (E x)] {EB : Type*} [NormedAddCommGroup EB] [NormedSpace ­ЮЋю EB]
  {HB : Type*} [TopologicalSpace HB] (IB : ModelWithCorners ­ЮЋю EB HB) [TopologicalSpace B]
  [ChartedSpace HB B] [SmoothManifoldWithCorners IB B] {EB' : Type*} [NormedAddCommGroup EB']
  [NormedSpace ­ЮЋю EB'] {HB' : Type*} [TopologicalSpace HB'] (IB' : ModelWithCorners ­ЮЋю EB' HB')
  [TopologicalSpace B'] [ChartedSpace HB' B'] [SmoothManifoldWithCorners IB' B'] [FiberBundle F E]
  [VectorBundle ­ЮЋю F E] [SmoothVectorBundle F E IB] (f : SmoothMap IB' IB B' B)

/-- For a smooth vector bundle `E` over a manifold `B` and a smooth map `f : B' Рєњ B`, the pullback
vector bundle `f *рхќ E` is a smooth vector bundle. -/
instance SmoothVectorBundle.pullback : SmoothVectorBundle F (f *рхќ E) IB' where
  smoothOn_coordChangeL := by
    rintro _ _ РЪеe, he, rflРЪЕ РЪеe', he', rflРЪЕ
    refine ((smoothOn_coordChangeL _ e e').comp f.smooth.smoothOn fun b hb => hb).congr ?_
    rintro b (hb : f b Рѕѕ e.baseSet РѕЕ e'.baseSet); ext v
    show ((e.pullback f).coordChangeL ­ЮЋю (e'.pullback f) b) v = (e.coordChangeL ­ЮЋю e' (f b)) v
    rw [e.coordChangeL_apply e' hb, (e.pullback f).coordChangeL_apply' _]
    exacts [rfl, hb]

/-- For a smooth vector bundle `E` over a manifold `B` and a smooth map `f : B' Рєњ B`, the natural
"lift" map from the total space of `f *рхќ E` to the total space of `E` is smooth. -/
theorem Bundle.Pullback.smooth_lift :
    Smooth (IB'.prod ­ЮЊў(­ЮЋю, F)) (IB.prod ­ЮЊў(­ЮЋю, F)) (Pullback.lift f : TotalSpace F (f *рхќ E) Рєњ _) := by
  sorry

variable {M EM HM : Type*} [NormedAddCommGroup EM] [NormedSpace ­ЮЋю EM] [TopologicalSpace HM]
  {IM : ModelWithCorners ­ЮЋю EM HM} [TopologicalSpace M] [ChartedSpace HM M]
  [SmoothManifoldWithCorners IM M]

/-- Given a smooth vector bundle `E` over a manifold `B` and a smooth map `f : B' Рєњ B`, if `¤є` is
a map into the total space of the pullback `f *рхќ E`, then its smoothness can be checked by checking
the smoothness of (1) the map `TotalSpace.proj Рѕў ¤є` into `B'`, and (ii) the map
`Pullback.lift f Рѕў ¤є` into the total space of `E`. -/
theorem Bundle.Pullback.smooth_of_smooth_proj_comp_of_smooth_lift_comp
    {¤є : M Рєњ TotalSpace F (f *рхќ E)} (h1 : Smooth IM IB' (TotalSpace.proj Рѕў ¤є))
    (h2 : Smooth IM (IB.prod ­ЮЊў(­ЮЋю, F)) (Pullback.lift f Рѕў ¤є)) : Smooth IM (IB'.prod ­ЮЊў(­ЮЋю, F)) ¤є := by
  sorry
