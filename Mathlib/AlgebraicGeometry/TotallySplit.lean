import Mathlib

suppress_compilation

universe u

variable {R M : Type*} [CommRing R] [AddCommGroup M] [Module R M]

open TensorProduct IsLocalRing AlgebraicGeometry CategoryTheory Limits

def degree {X S : Scheme.{u}} (f : X ‚ü∂ S) : X ‚Üí ‚Ñï := sorry

namespace AlgebraicGeometry

def Scheme.trivialCover (X : Scheme.{u}) (n : ‚Ñï) :
    (‚àê fun _ : Fin n ‚Ü¶ X) ‚ü∂ X :=
  Sigma.desc (fun _ ‚Ü¶ ùüô X)

def trivialCover' (X : ‚Ñï ‚Üí Scheme.{u}) :
    (‚àê fun n : ‚Ñï ‚Ü¶ (‚àê fun _ : Fin n ‚Ü¶ X n)) ‚ü∂ ‚àê X :=
  Sigma.desc (fun n ‚Ü¶ Sigma.desc fun _ : Fin n ‚Ü¶ Sigma.Œπ X n)

class IsSplitOfDegree (n : outParam ‚Ñï) {X S : Scheme.{u}} (f : X ‚ü∂ S) : Prop where
  is_split : Nonempty (Over.mk f ‚âÖ Over.mk (S.trivialCover n))

namespace IsSplitOfDegree

lemma trivialCover (S : Scheme.{u}) (n : ‚Ñï) :
    IsSplitOfDegree n (S.trivialCover n) where
  is_split := ‚ü®Iso.refl _‚ü©

instance (priority := 900) (n : ‚Ñï) {X S : Scheme.{u}} (f : X ‚ü∂ S)
    [IsSplitOfDegree n f] : IsFinite f :=
  sorry

lemma iff_exists_cofan (n : ‚Ñï) {X S : Scheme.{u}} (f : X ‚ü∂ S) :
    IsSplitOfDegree n f ‚Üî True :=
  sorry

end IsSplitOfDegree

lemma degree_eq_of_isSplitOfDegree {X S : Scheme.{u}} (f : X ‚ü∂ S) {n : ‚Ñï}
    [IsSplitOfDegree n f] : degree f = n :=
  sorry

inductive IsSplitAux : {X Y : Scheme.{u}} ‚Üí (X ‚ü∂ Y) ‚Üí Prop where
  | empty {X S : Scheme.{u}} (f : X ‚ü∂ S) [IsEmpty X] : IsSplitAux f
  | cons {X S Y : Scheme.{u}} (f : X ‚ü∂ S) (hf : IsSplitAux f) (n : ‚Ñï) :
      IsSplitAux (coprod.map f (Y.trivialCover n))

class IsSplit {X S : Scheme.{u}} (f : X ‚ü∂ S) : Prop where
  is_coprod : ‚àÉ (X : ‚Ñï ‚Üí Scheme.{u}), Nonempty (Arrow.mk f ‚âÖ Arrow.mk (trivialCover' X))

instance (priority := 900) IsSplit.of_isSplitOfDegree {X S : Scheme.{u}} (f : X ‚ü∂ S)
    (n : ‚Ñï) [IsSplitOfDegree n f] : IsSplit f :=
  sorry

namespace IsSplit

variable {X S : Scheme.{u}} (f : X ‚ü∂ S)

instance (priority := 900) [IsSplit f] : IsFinite f :=
  sorry

instance (priority := 900) [IsSplit f] : IsFinite f :=
  sorry

end IsSplit

theorem main_aux (n : ‚Ñï) {X S : Scheme.{u}} (f : X ‚ü∂ S) (hn : degree f = n)
    [IsEtale f] [IsFinite f] :
    ‚àÉ (W : Scheme.{u}) (g : W ‚ü∂ S),
      Flat g ‚àß Surjective g ‚àß IsFinite g ‚àß IsSplit (pullback.snd f g) :=
  sorry

theorem main {X S : Scheme.{u}} (f : X ‚ü∂ S) [IsEtale f] [IsFinite f] :
    ‚àÉ (W : Scheme.{u}) (g : W ‚ü∂ S),
      Flat g ‚àß Surjective g ‚àß IsFinite g ‚àß IsSplit (pullback.snd f g) :=
  sorry

end AlgebraicGeometry
