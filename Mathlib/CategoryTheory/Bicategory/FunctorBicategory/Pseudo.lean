/-
Copyright (c) 2024 Calle S√∂nne. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Calle S√∂nne
-/

import Mathlib.CategoryTheory.Bicategory.NaturalTransformation.Strong
import Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax

/-!
# The bicategory of pseudofunctors between two bicategories

Given bicategories `B` and `C`, we give a bicategory structure on `Pseudofunctor B C` whose
* objects are pseudofunctors,
* 1-morphisms are strong natural transformations, and
* 2-morphisms are modifications.
-/


namespace CategoryTheory

open Category Bicategory

open scoped Bicategory

universe w‚ÇÅ w‚ÇÇ v‚ÇÅ v‚ÇÇ u‚ÇÅ u‚ÇÇ

variable {B : Type u‚ÇÅ} [Bicategory.{w‚ÇÅ, v‚ÇÅ} B] {C : Type u‚ÇÇ} [Bicategory.{w‚ÇÇ, v‚ÇÇ} C]

namespace Pseudofunctor.Bicategory

variable {F G H I : Pseudofunctor B C}

/-- Left whiskering of a strong natural transformation between pseudofunctors
and a modification. -/
@[simps!]
def whiskerLeft (Œ∑ : F ‚ü∂ G) {Œ∏ Œπ : G ‚ü∂ H} (Œì : Œ∏ ‚ü∂ Œπ) : Œ∑ ‚â´ Œ∏ ‚ü∂ Œ∑ ‚â´ Œπ :=
  OplaxNatTrans.whiskerLeft Œ∑.toOplax Œì

/-- Right whiskering of an strong natural transformation between pseudofunctors
and a modification. -/
@[simps!]
def whiskerRight {Œ∑ Œ∏ : F ‚ü∂ G} (Œì : Œ∑ ‚ü∂ Œ∏) (Œπ : G ‚ü∂ H) : Œ∑ ‚â´ Œπ ‚ü∂ Œ∏ ‚â´ Œπ :=
  OplaxNatTrans.whiskerRight Œì Œπ.toOplax

/-- Associator for the vertical composition of strong natural transformations
between pseudofunctors. -/
@[simps!]
def associator (Œ∑ : F ‚ü∂ G) (Œ∏ : G ‚ü∂ H) (Œπ : H ‚ü∂ I) : (Œ∑ ‚â´ Œ∏) ‚â´ Œπ ‚âÖ Œ∑ ‚â´ Œ∏ ‚â´ Œπ :=
  { OplaxNatTrans.associator Œ∑.toOplax Œ∏.toOplax Œπ.toOplax with }

/-- Left unitor for the vertical composition of strong natural transformations
between pseudofunctors. -/
@[simps!]
def leftUnitor (Œ∑ : F ‚ü∂ G) : ùüô F ‚â´ Œ∑ ‚âÖ Œ∑ :=
  { OplaxNatTrans.leftUnitor Œ∑.toOplax with }

/-- Right unitor for the vertical composition of strong natural transformations
between pseudofunctors. -/
@[simps!]
def rightUnitor (Œ∑ : F ‚ü∂ G) : Œ∑ ‚â´ ùüô G ‚âÖ Œ∑ :=
  { OplaxNatTrans.rightUnitor Œ∑.toOplax with }

end Pseudofunctor.Bicategory

variable (B C)

/-- A bicategory structure on the pseudofunctors between two bicategories. -/
@[simps!]
instance Pseudofunctor.bicategory : Bicategory (Pseudofunctor B C) where
  whiskerLeft {F G H} Œ∑ _ _ Œì := Pseudofunctor.Bicategory.whiskerLeft Œ∑ Œì
  whiskerRight {F G H} _ _ Œì Œ∑ := Pseudofunctor.Bicategory.whiskerRight Œì Œ∑
  associator {F G H} I := Pseudofunctor.Bicategory.associator
  leftUnitor {F G} := Pseudofunctor.Bicategory.leftUnitor
  rightUnitor {F G} := Pseudofunctor.Bicategory.rightUnitor
  whisker_exchange {a b c f g h i} Œ∑ Œ∏ := by ext; exact whisker_exchange _ _
  pentagon f g h i := by ext; exact pentagon _ _ _ _
  triangle f g := by ext; exact triangle _ _


end CategoryTheory
