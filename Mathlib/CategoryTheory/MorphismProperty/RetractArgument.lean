/-
Copyright (c) 2024 Jo√´l Riou. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Jo√´l Riou
-/

import Mathlib.CategoryTheory.MorphismProperty.Factorization
import Mathlib.CategoryTheory.MorphismProperty.LiftingProperty

/-!
# The retract argument

Let `W‚ÇÅ` and `W‚ÇÇ` be classes of morphisms in a category `C` such that
any morphism can be factored as a morphism in `W‚ÇÅ` followed by
a morphism in `W‚ÇÇ` (this is `HasFactorization W‚ÇÅ W‚ÇÇ`).
If `W‚ÇÅ` has the left lifting property with respect to `W‚ÇÇ`
(i.e. `W‚ÇÅ ‚â§ W‚ÇÇ.llp`, or equivalently `W‚ÇÇ ‚â§ W‚ÇÅ.rlp`),
then `W‚ÇÇ.llp = W‚ÇÅ` if `W‚ÇÅ` is stable under retracts,
and `W‚ÇÅ.rlp = W‚ÇÇ` if `W‚ÇÇ` is.

## Reference
- https://ncatlab.org/nlab/show/weak+factorization+system#retract_argument

-/

namespace CategoryTheory

variable {C : Type*} [Category C]

/-- If `i ‚â´ p = f`, and `f` has the left lifting property with respect to `p`,
then `f` is a retract of `i`. -/
noncomputable def RetractArrow.ofLeftLiftingProperty
    {X Y Z : C} {f : X ‚ü∂ Z} {i : X ‚ü∂ Y} {p : Y ‚ü∂ Z} (h : i ‚â´ p = f)
    [HasLiftingProperty f p] : RetractArrow f i :=
  have sq : CommSq i f p (ùüô _) := ‚ü®by simp [h]‚ü©
  { i := Arrow.homMk (u := ùüô X) (v := sq.lift) (by simp)
    r := Arrow.homMk (u := ùüô X) (v := p) (by simp [h]) }

/-- If `i ‚â´ p = f`, and `f` has the right lifting property with respect to `i`,
then `f` is a retract of `p`. -/
noncomputable def RetractArrow.ofRightLiftingProperty
    {X Y Z : C} {f : X ‚ü∂ Z} {i : X ‚ü∂ Y} {p : Y ‚ü∂ Z} (h : i ‚â´ p = f)
    [HasLiftingProperty i f] : RetractArrow f p :=
  have sq : CommSq (ùüô _) i f p := ‚ü®by simp [h]‚ü©
  { i := Arrow.homMk (u := i) (v := ùüô _) (by simp [h])
    r := Arrow.homMk (u := sq.lift) (v := ùüô _) (by simp) }

namespace MorphismProperty

variable {W‚ÇÅ W‚ÇÇ : MorphismProperty C}

lemma llp_eq_of_le_llp_of_hasFactorization_of_isStableUnderRetracts
    [HasFactorization W‚ÇÅ W‚ÇÇ] [W‚ÇÅ.IsStableUnderRetracts] (h‚ÇÅ : W‚ÇÅ ‚â§ W‚ÇÇ.llp) :
    W‚ÇÇ.llp = W‚ÇÅ :=
  le_antisymm (by
    intro A B i hi
    have h := factorizationData W‚ÇÅ W‚ÇÇ i
    have : HasLiftingProperty i h.p := by simpa using hi _ h.hp
    simpa using of_retract (RetractArrow.ofLeftLiftingProperty h.fac) h.hi) h‚ÇÅ

lemma rlp_eq_of_le_rlp_of_hasFactorization_of_isStableUnderRetracts
    [HasFactorization W‚ÇÅ W‚ÇÇ] [W‚ÇÇ.IsStableUnderRetracts] (h‚ÇÇ : W‚ÇÇ ‚â§ W‚ÇÅ.rlp) :
    W‚ÇÅ.rlp = W‚ÇÇ :=
  le_antisymm (by
    intro X Y p hp
    have h := factorizationData W‚ÇÅ W‚ÇÇ p
    have : HasLiftingProperty h.i p := by simpa using hp _ h.hi
    simpa using of_retract (RetractArrow.ofRightLiftingProperty h.fac) h.hp) h‚ÇÇ

end MorphismProperty

end CategoryTheory
