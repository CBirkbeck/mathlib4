/-
Copyright (c) 2022 Yury Kudryashov. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Yury Kudryashov
-/
import Mathlib.Analysis.Convex.StrictConvexSpace
import Mathlib.Analysis.Normed.Operator.LinearIsometry

/-!
# (Strict) convexity and linear isometries

In this file we prove some basic lemmas about (strict) convexity and linear isometries.

-/

open Function Set Metric
open scoped Convex

section SeminormedAddCommGroup

variable {ùïú E F : Type*}
  [NormedField ùïú]
  [SeminormedAddCommGroup E] [NormedSpace ùïú E]
  [SeminormedAddCommGroup F] [NormedSpace ùïú F]

@[simp]
lemma LinearIsometryEquiv.strictConvex_preimage {s : Set F} (e : E ‚âÉ‚Çó·µ¢[ùïú] F) :
    StrictConvex ùïú (e ‚Åª¬π' s) ‚Üî StrictConvex ùïú s :=
  ‚ü®fun h ‚Ü¶ LeftInverse.preimage_preimage e.right_inv s ‚ñ∏
    h.linear_preimage e.symm.toLinearIsometry.toLinearMap e.symm.continuous e.symm.injective,
    fun h ‚Ü¶ h.linear_preimage e.toLinearIsometry.toLinearMap e.continuous e.injective‚ü©


end SeminormedAddCommGroup

variable {E E' F F' : Type*}
  [SeminormedAddCommGroup E] [NormedSpace ‚Ñù E]
  [SeminormedAddCommGroup F] [NormedSpace ‚Ñù F]
  [NormedAddCommGroup E'] [NormedSpace ‚Ñù E']
  [NormedAddCommGroup F'] [NormedSpace ‚Ñù F']

lemma StrictConvex.linearIsometry_preimage {s : Set F} (hs : StrictConvex ‚Ñù s) (e : E' ‚Üí‚Çó·µ¢[‚Ñù] F) :
    StrictConvex ‚Ñù (e ‚Åª¬π' s) :=
  hs.linear_preimage _ e.continuous e.injective

@[simp]
lemma LinearIsometryEquiv.strictConvex_image {s : Set E} (e : E ‚âÉ‚Çó·µ¢[‚Ñù] F) :
    StrictConvex ‚Ñù (e '' s) ‚Üî StrictConvex ‚Ñù s := by
  rw [e.image_eq_preimage, e.symm.strictConvex_preimage]

protected lemma LinearIsometryEquiv.strictConvexSpace_iff (e : E' ‚âÉ‚Çó·µ¢[‚Ñù] F') :
    StrictConvexSpace ‚Ñù E' ‚Üî StrictConvexSpace ‚Ñù F' := by
  simp only [strictConvexSpace_iff, ‚Üê map_zero e, ‚Üê e.image_closedBall, e.strictConvex_image]

lemma LinearIsometry.strictConvexSpace_range_iff (e : E' ‚Üí‚Çó·µ¢[‚Ñù] F') :
    StrictConvexSpace ‚Ñù (LinearMap.range e) ‚Üî StrictConvexSpace ‚Ñù E' :=
  e.equivRange.strictConvexSpace_iff.symm

instance LinearIsometry.strictConvexSpace_range [StrictConvexSpace ‚Ñù E'] (e : E' ‚Üí‚Çó·µ¢[‚Ñù] F') :
    StrictConvexSpace ‚Ñù (LinearMap.range e) :=
  e.strictConvexSpace_range_iff.mpr ‚Äπ_‚Ä∫

/-- A vector subspace of a strict convex space is a strict convex space.

This instance has priority 900
to make sure that instances like `LinearIsometry.strictConvexSpace_range`
are tried before this one. -/
instance (priority := 900) Submodule.instStrictConvexSpace [StrictConvexSpace ‚Ñù E']
    (p : Submodule ‚Ñù E') : StrictConvexSpace ‚Ñù p where
  strictConvex_closedBall r hr := by
    rw [‚Üê p.subtype‚Çó·µ¢.isometry.preimage_closedBall]
    exact (strictConvex_closedBall _ _ _).linearIsometry_preimage _
