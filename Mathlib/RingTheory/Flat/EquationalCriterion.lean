/-
Copyright (c) 2024 Mitchell Lee. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Mitchell Lee
-/
import Mathlib.RingTheory.Flat.Basic

/-! # The equational criterion for flatness

Let $M$ be a module over a commutative ring $R$. Let us say that a relation $\sum_i f_i x_i = 0$ in
$M$ is *trivial* (where $i$ ranges over some finite index type $\iota$) if there exist a
finite index type $\kappa$, elements $(y_j)_{j \in \kappa}$ of $M$,
and elements $(a_{ij})_{i \in \iota, j \in \kappa}$ of $R$ such that for all $i$,
\[x_i = \sum_j a_{ij} y_j\]
and for all $j$,
\[\sum_{i} f_i a_{ij} = 0.\]

The *equational criterion for flatness*,
[Stacks 00HK](https://stacks.math.columbia.edu/tag/00HK), states that $M$ is flat if and only
if every relation in $M$ is trivial.

The equational criterion for flatness can be stated in the following equivalent form. Let $M$ be an
$R$-module. Let $x \in R^{\iota}$, where $\iota$ is a finite index type, and let
$f \colon R^{\iota} \to M$ be a homomorphism of modules such that $f(x) = 0$. Let us say that
the pair $(f, x)$ is *trivial* if there exist a finite index type $\kappa$ and module
homomorphisms $a \colon R^{\iota} \to R^{\kappa}$ and $y \colon R^{\kappa} \to M$ such
that $f = y \circ a$ and $a(x) = 0$.

Then the module $M$ is flat if and only if every pair $(f, x)$ which satisfies $f(x) = 0$
is trivial, for all finite index types $\iota$.

## References

* [Stacks: Flat modules and flat ring maps](https://stacks.math.columbia.edu/tag/00H9)

## TODO

* State a version of the equational criterion for flatness where $R^\iota$ is replaced by an
arbitrary free module.

-/

universe u v w

variable {R : Type u} {M : Type v} [CommRing R] [AddCommGroup M] [Module R M]

open Classical DirectSum LinearMap TensorProduct
open scoped BigOperators

section Relation

variable {ι : Type w} [Fintype ι] (f : ι → R) (x : ι → M)

/-- The proposition that the relation $\sum_i f_i x_i = 0$ in $M$ is trivial.
That is, there exist a finite index type $\kappa$, elements
$(y_j)_{j \in \kappa}$ of $M$, and elements $(a_{ij})_{i \in \iota, j \in \kappa$ of $R$
such that for all $i$,
\[x_i = \sum_j a_{ij} y_j\]
and for all $j$,
\[\sum_{i} f_i a_{ij} = 0.\] -/
abbrev Module.IsTrivialRelation : Prop :=
  ∃ (κ : Type max u v w) (_ : Fintype κ) (a : ι → κ → R) (y : κ → M),
    (∀ i, x i = ∑ j, a i j • y j) ∧ ∀ j, ∑ i, f i * a i j = 0

/-- If the relation given by $(f_i)_{i \in \iota}$ and $(x_i)_{i \in \iota}$ is trivial, then
$\sum_{i} f_i x_i$ is actually equal to $0$. -/
theorem sum_smul_eq_zero_of_isTrivialRelation (h : Module.IsTrivialRelation f x) :
    ∑ i, f i • x i = 0 := by
  obtain ⟨κ, _, a, y, h₁, h₂⟩ := h
  simp_rw [h₁, Finset.smul_sum, smul_smul]
  rw [Finset.sum_comm]
  simp_rw [← Finset.sum_smul, h₂, zero_smul, Finset.sum_const_zero]

end Relation

namespace Module.Flat

/-- **Equational criterion for flatness**,
[Stacks 00HK](https://stacks.math.columbia.edu/tag/00HK), forward direction.
If $M$ is flat, then every relation in $M$ is trivial. -/
theorem relation_trivial_of_flat [Flat R M] {ι : Type w} [Fintype ι] {f : ι → R} {x : ι → M}
    (h : ∑ i, f i • x i = 0) : IsTrivialRelation f x := by
  -- Define a map $F \colon R^\iota \to R$ whose matrix entries are the $f_i$.
  set F : (⨁ (i : ι), R) →ₗ[R] R := toModule R ι R (fun i ↦ (f i) • LinearMap.id) with hF
  -- Let $I$ be the ideal generated by the $f_i$; i.e. the range of $F$.
  set I : Ideal R := LinearMap.range F with hI
  have f_mem : ∀ i, f i ∈ I := by
    intro i
    rw [mem_range, hF]
    use (lof R ι _ i) 1
    rw [toModule_lof, LinearMap.smul_apply, id_apply, smul_eq_mul, mul_one]
  -- Consider the element $\sum_i e_i \otimes x_i$.
  set ex : (⨁ (i : ι), R) ⊗[R] M := ∑ i, (lof R ι _ i) 1 ⊗ₜ x i with hex
  -- Consider the element $\sum_i f_i \otimes x_i \in I \otimes M$. We claim that it is zero.
  set fx : I ⊗[R] M := (rTensor M F.rangeRestrict) ex with hfx
  -- First, $\sum_i f_i x_i = 0$.
  have rTensor_apply_fx_eq_zero : (rTensor M (Submodule.subtype I)) fx = 0 := by
    apply (TensorProduct.lid R M).injective
    simp [hfx, hex, hF, h]
  -- So $\sum_i f_i \otimes x_i = 0$ as desired.
  have rTensor_injective := (iff_rTensor_injective' R M).mp inferInstance I
  have fx_eq_zero := (injective_iff_map_eq_zero _).mp rTensor_injective fx rTensor_apply_fx_eq_zero



end Module.Flat
