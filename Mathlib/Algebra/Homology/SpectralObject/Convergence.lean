import Mathlib.Algebra.Homology.SpectralObject.SpectralSequence
import Mathlib.Algebra.Homology.SpectralSequenceNew.LowDegreesExactSequence

namespace CategoryTheory

open ComposableArrows Limits

namespace Abelian

variable {C Œπ Œ∫ : Type*} [Category C] [Abelian C] [Preorder Œπ] [OrderBot Œπ] [OrderTop Œπ]
  (X : SpectralObject C Œπ)
  {c : ‚Ñ§ ‚Üí ComplexShape Œ∫} {r‚ÇÄ : ‚Ñ§}
  [‚àÄ r, DecidableRel (c r).Rel]


namespace SpectralObject

noncomputable def abutment (n : ‚Ñ§) : C :=
    (X.H n).obj (mk‚ÇÅ (homOfLE' ‚ä• ‚ä§ bot_le))

noncomputable def pageInfinity (n‚ÇÄ n‚ÇÅ n‚ÇÇ : ‚Ñ§)
    (hn‚ÇÅ : n‚ÇÄ + 1 = n‚ÇÅ) (hn‚ÇÇ : n‚ÇÅ + 1 = n‚ÇÇ)
    (i j : Œπ) (hij : i ‚â§ j) : C :=
    X.E n‚ÇÄ n‚ÇÅ n‚ÇÇ hn‚ÇÅ hn‚ÇÇ (homOfLE bot_le) (homOfLE hij) (homOfLE le_top)

noncomputable def abutmentFiltration (n : ‚Ñ§) (j : Œπ) : C :=
  kernel ((X.H n).map (show mk‚ÇÅ (homOfLE' (‚ä• : Œπ) ‚ä§ bot_le) ‚ü∂ mk‚ÇÅ (homOfLE' j ‚ä§ le_top) from
      homMk‚ÇÅ (homOfLE bot_le) (ùüô _) rfl))

variable (data : SpectralSequenceMkData Œπ c r‚ÇÄ)
  {œÉ : Type*} {Œ± : œÉ ‚Üí Type*} [‚àÄ n, LinearOrder (Œ± n)]
  (s : SpectralSequence.ConvergenceStripes Œ∫ Œ±)

namespace SpectralSequenceMkData

structure CompatibleWithConvergenceStripes where
  deg : œÉ ‚Üí ‚Ñ§
  deg_stripe (pq : Œ∫) : deg (s.stripe pq) = data.deg pq := by aesop

namespace CompatibleWithConvergenceStripes

variable {data s}
variable (hdata : data.CompatibleWithConvergenceStripes s)

@[simp]
lemma deg_position (n : œÉ) (i : Œ± n) :
    data.deg (s.position n i) = hdata.deg n := by
  simp only [‚Üê s.stripe_position n i, hdata.deg_stripe]

@[nolint unusedArguments]
def mapWithBot (_ : data.CompatibleWithConvergenceStripes s) (n : œÉ) : WithBot (Œ± n) ‚Üí Œπ
  | none => ‚ä•
  | some i => data.i‚ÇÇ (s.position n i) -- or i‚ÇÅ ??

end CompatibleWithConvergenceStripes

end SpectralSequenceMkData

@[simps]
def mkDataE‚ÇÇCohomologicalCompatibility :
    mkDataE‚ÇÇCohomological.CompatibleWithConvergenceStripes
      SpectralSequence.cohomologicalStripes where
  deg n := n

@[simps]
def mkDataE‚ÇÇCohomologicalNatCompatibility :
    mkDataE‚ÇÇCohomologicalNat.CompatibleWithConvergenceStripes
      CohomologicalSpectralSequenceNat.stripes where
  deg n := n

end SpectralObject

end Abelian

end CategoryTheory

#lint
