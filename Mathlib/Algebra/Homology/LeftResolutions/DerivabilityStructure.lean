/-
Copyright (c) 2025 Jo√´l Riou. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Jo√´l Riou
-/
import Mathlib.CategoryTheory.Localization.DerivabilityStructure.OfFunctorialResolutions
import Mathlib.Algebra.Homology.QuasiIso

/-!
# Left derivability structures on homological complexes

-/

open CategoryTheory

variable {A Œ± C : Type*} [Category A] [Abelian A] {c : ComplexShape Œ±}
  [Category C] {W : MorphismProperty C}
  (Œ¶ : LocalizerMorphism W (HomologicalComplex.quasiIso A c))
  [Œ¶.functor.Full] [Œ¶.functor.Faithful]
  (hW : W = (HomologicalComplex.quasiIso A c).inverseImage Œ¶.functor)
  {œÅ : HomologicalComplex A c ‚•§ C} (œÄ : œÅ ‚ãô Œ¶.functor ‚ü∂ ùü≠ _) [‚àÄ K, QuasiIso (œÄ.app K)]

namespace HomologicalComplex

include hW œÄ

lemma isLocalizedEquivalence_of_functorial_left_resolutions :
    Œ¶.IsLocalizedEquivalence :=
  Œ¶.isLocalizedEquivalence_of_functorial_left_resolutions œÄ
    (fun _ ‚Ü¶ by rw [mem_quasiIso_iff]; infer_instance) hW

lemma isLeftDerivabilityStructure_of_functorial_left_resolutions :
    Œ¶.IsLeftDerivabilityStructure :=
  Œ¶.isLeftDerivabilityStructure_of_functorial_resolutions œÄ
    (fun _ ‚Ü¶ by rw [mem_quasiIso_iff]; infer_instance) hW

end HomologicalComplex
