/-
Copyright (c) 2024 Jo√´l Riou. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Jo√´l Riou
-/
import Mathlib.Algebra.Homology.Bifunctor
import Mathlib.Algebra.Homology.HomotopyCategory.MappingCone

/-!
# Action of bifunctor on mapping cones
-/

open CategoryTheory Limits HomologicalComplex

namespace CochainComplex

variable
  {C‚ÇÅ C‚ÇÇ D : Type*} [Category C‚ÇÅ] [Category C‚ÇÇ] [Category D]
  [Preadditive C‚ÇÅ] [HasZeroMorphisms C‚ÇÇ]
  {K‚ÇÅ L‚ÇÅ : CochainComplex C‚ÇÅ ‚Ñ§} (œÜ : K‚ÇÅ ‚ü∂ L‚ÇÅ) (K‚ÇÇ : CochainComplex C‚ÇÇ ‚Ñ§) [Preadditive D]
  (F : C‚ÇÅ ‚•§ C‚ÇÇ ‚•§ D) [F.PreservesZeroMorphisms]
  [‚àÄ (X‚ÇÅ : C‚ÇÅ), (F.obj X‚ÇÅ).PreservesZeroMorphisms]
  [HasMapBifunctor K‚ÇÅ K‚ÇÇ F (ComplexShape.up ‚Ñ§)]
  [HasMapBifunctor L‚ÇÅ K‚ÇÇ F (ComplexShape.up ‚Ñ§)]
  [HasHomotopyCofiber œÜ]
  [HasMapBifunctor (mappingCone œÜ) K‚ÇÇ F (ComplexShape.up ‚Ñ§)]
  [HasHomotopyCofiber (mapBifunctorMap œÜ (ùüô K‚ÇÇ) F (.up ‚Ñ§))]

open HomComplex

/-noncomputable def mapBifunctorMappingCone‚ÇÅIso :
    mapBifunctor (mappingCone œÜ) K‚ÇÇ F (.up ‚Ñ§) ‚âÖ
      mappingCone (mapBifunctorMap œÜ (ùüô K‚ÇÇ) F (.up ‚Ñ§)) :=
  sorry-/

end CochainComplex
