{"ignoreImport":
 ["Aesop",
  "Init",
  "Lean",
  "Lean.Elab.ElabRules",
  "Lean.Elab.Tactic.Config",
  "Mathlib.AlgebraicTopology.DoldKan.Notations",
  "Mathlib.Data.Rat.Init",
  "Mathlib.Init.Data.Nat.Notation",
  "Mathlib.Mathport.Attributes",
  "Mathlib.Mathport.Notation",
  "Mathlib.Mathport.Rename",
  "Mathlib.Probability.Notation",
  "Mathlib.Tactic.Abel",
  "Mathlib.Tactic.ApplyCongr",
  "Mathlib.Tactic.ApplyFun",
  "Mathlib.Tactic.ApplyWith",
  "Mathlib.Tactic.Attr.Core",
  "Mathlib.Tactic.Attr.Register",
  "Mathlib.Tactic.Basic",
  "Mathlib.Tactic.ByContra",
  "Mathlib.Tactic.CancelDenoms",
  "Mathlib.Tactic.Cases",
  "Mathlib.Tactic.CasesM",
  "Mathlib.Tactic.CategoryTheory.Coherence",
  "Mathlib.Tactic.CategoryTheory.Elementwise",
  "Mathlib.Tactic.CategoryTheory.Slice",
  "Mathlib.Tactic.Choose",
  "Mathlib.Tactic.Classical",
  "Mathlib.Tactic.Clean",
  "Mathlib.Tactic.Clear!",
  "Mathlib.Tactic.ClearExcept",
  "Mathlib.Tactic.Clear_",
  "Mathlib.Tactic.Coe",
  "Mathlib.Tactic.Common",
  "Mathlib.Tactic.Congr!",
  "Mathlib.Tactic.Congrm",
  "Mathlib.Tactic.Constructor",
  "Mathlib.Tactic.Continuity",
  "Mathlib.Tactic.Contrapose",
  "Mathlib.Tactic.Conv",
  "Mathlib.Tactic.Convert",
  "Mathlib.Tactic.Core",
  "Mathlib.Tactic.DefEqTransformations",
  "Mathlib.Tactic.DeriveFintype",
  "Mathlib.Tactic.DeriveToExpr",
  "Mathlib.Tactic.Eqns",
  "Mathlib.Tactic.Existsi",
  "Mathlib.Tactic.ExtendDoc",
  "Mathlib.Tactic.ExtractGoal",
  "Mathlib.Tactic.FBinop",
  "Mathlib.Tactic.FailIfNoProgress",
  "Mathlib.Tactic.FieldSimp",
  "Mathlib.Tactic.FinCases",
  "Mathlib.Tactic.Find",
  "Mathlib.Tactic.GCongr",
  "Mathlib.Tactic.GCongr.Core",
  "Mathlib.Tactic.GeneralizeProofs",
  "Mathlib.Tactic.Group",
  "Mathlib.Tactic.GuardHypNums",
  "Mathlib.Tactic.HaveI",
  "Mathlib.Tactic.Hint",
  "Mathlib.Tactic.InferParam",
  "Mathlib.Tactic.Inhabit",
  "Mathlib.Tactic.IntervalCases",
  "Mathlib.Tactic.IrreducibleDef",
  "Mathlib.Tactic.LibrarySearch",
  "Mathlib.Tactic.Lift",
  "Mathlib.Tactic.LiftLets",
  "Mathlib.Tactic.Linarith",
  "Mathlib.Tactic.Linarith.Lemmas",
  "Mathlib.Tactic.LinearCombination",
  "Mathlib.Tactic.Measurability",
  "Mathlib.Tactic.MkIffOfInductiveProp",
  "Mathlib.Tactic.ModCases",
  "Mathlib.Tactic.Monotonicity",
  "Mathlib.Tactic.Monotonicity.Attr",
  "Mathlib.Tactic.NoncommRing",
  "Mathlib.Tactic.Nontriviality",
  "Mathlib.Tactic.NormNum",
  "Mathlib.Tactic.NormNum.Core",
  "Mathlib.Tactic.NormNum.Eq",
  "Mathlib.Tactic.NormNum.Ineq",
  "Mathlib.Tactic.NthRewrite",
  "Mathlib.Tactic.PPWithUniv",
  "Mathlib.Tactic.Peel",
  "Mathlib.Tactic.Polyrith",
  "Mathlib.Tactic.Positivity",
  "Mathlib.Tactic.Positivity.Basic",
  "Mathlib.Tactic.ProjectionNotation",
  "Mathlib.Tactic.PushNeg",
  "Mathlib.Tactic.Qify",
  "Mathlib.Tactic.RSuffices",
  "Mathlib.Tactic.Recover",
  "Mathlib.Tactic.ReduceModChar.Ext",
  "Mathlib.Tactic.Relation.Symm",
  "Mathlib.Tactic.Relation.Trans",
  "Mathlib.Tactic.Rename",
  "Mathlib.Tactic.RenameBVar",
  "Mathlib.Tactic.Replace",
  "Mathlib.Tactic.Ring",
  "Mathlib.Tactic.Ring.Basic",
  "Mathlib.Tactic.RunCmd",
  "Mathlib.Tactic.Says",
  "Mathlib.Tactic.ScopedNS",
  "Mathlib.Tactic.Set",
  "Mathlib.Tactic.SetLike",
  "Mathlib.Tactic.SimpIntro",
  "Mathlib.Tactic.SimpRw",
  "Mathlib.Tactic.Simps.Basic",
  "Mathlib.Tactic.SplitIfs",
  "Mathlib.Tactic.Spread",
  "Mathlib.Tactic.Substs",
  "Mathlib.Tactic.SuppressCompilation",
  "Mathlib.Tactic.SwapVar",
  "Mathlib.Tactic.TFAE",
  "Mathlib.Tactic.Tauto",
  "Mathlib.Tactic.TermCongr",
  "Mathlib.Tactic.ToAdditive",
  "Mathlib.Tactic.ToExpr",
  "Mathlib.Tactic.ToLevel",
  "Mathlib.Tactic.Trace",
  "Mathlib.Tactic.TypeCheck",
  "Mathlib.Tactic.Use",
  "Mathlib.Tactic.WLOG",
  "Mathlib.Tactic.Zify",
  "Mathlib.Util.AssertExists",
  "Mathlib.Util.CompileInductive",
  "Mathlib.Util.Delaborators",
  "Mathlib.Util.Syntax",
  "Mathlib.Util.Tactic",
  "Mathlib.Util.WhatsNew",
  "Mathlib.Util.WithWeakNamespace",
  "Qq",
  "Std.Classes.SetNotation",
  "Std.CodeAction",
  "Std.Data.Fin.Basic",
  "Std.Data.Json",
  "Std.Tactic.Alias",
  "Std.Tactic.Basic",
  "Std.Tactic.Change",
  "Std.Tactic.Ext",
  "Std.Tactic.Ext.Attr",
  "Std.Tactic.GuardMsgs",
  "Std.Tactic.HaveI",
  "Std.Tactic.LeftRight",
  "Std.Tactic.Lint",
  "Std.Tactic.Lint.Misc",
  "Std.Tactic.NoMatch",
  "Std.Tactic.NormCast",
  "Std.Tactic.NormCast.Lemmas",
  "Std.Tactic.OpenPrivate",
  "Std.Tactic.RCases",
  "Std.Tactic.Relation.Rfl",
  "Std.Tactic.Relation.Symm",
  "Std.Tactic.Replace",
  "Std.Tactic.Simpa",
  "Std.Tactic.SolveByElim",
  "Std.Tactic.SolveByElim.Backtrack",
  "Std.Util.LibraryNote",
  "Std.Util.ProofWanted",
  "Std.Util.TermUnsafe"],
 "ignoreAll": ["Std.Tactic.Basic"],
 "ignore":
 {"Std.Tactic.OpenPrivate": ["Lean.Parser.Module"],
  "Std.Tactic.Omega.OmegaM": ["Std.Tactic.Omega.Int"],
  "Std.Tactic.Omega.Frontend": ["Std.Tactic.Omega.Logic"],
  "Std.Tactic.NormCast": ["Std.Classes.Cast"],
  "Std.Tactic.GuardMsgs": ["Std.CodeAction.Basic"],
  "Std.Tactic.ByCases": ["Lean.Parser.Tactic"],
  "Std.Logic": ["Std.Tactic.Basic"],
  "Std.Linter.UnreachableTactic": ["Std.Tactic.Unreachable"],
  "Std.Data.String.Lemmas": ["Std.Data.String.Basic"],
  "Std.Data.List.Basic": ["Std.Data.Option.Init.Lemmas"],
  "Std.Data.Json": ["Lean.Data.Json.FromToJson"],
  "Std.Data.Array.Init.Lemmas": ["Std.Data.Fin.Init.Lemmas"],
  "Std.CodeAction.Misc": ["Lean.Elab.BuiltinNotation", "Lean.Elab.BuiltinTerm"],
  "Std.CodeAction.Basic":
  ["Lean.Elab.BuiltinNotation", "Lean.Elab.BuiltinTerm"],
  "Std.Classes.SetNotation": ["Std.Util.ExtendedBinder"],
  "Mathlib.Tactic.SetLike": ["Aesop"],
  "Mathlib.Tactic.NoncommRing": ["Mathlib.Tactic.Abel"],
  "Mathlib.Tactic.Measurability": ["Mathlib.Tactic.Measurability.Init"],
  "Mathlib.Tactic.Contrapose": ["Mathlib.Tactic.PushNeg"],
  "Mathlib.Tactic.Continuity": ["Mathlib.Tactic.Continuity.Init"],
  "Mathlib.Tactic.Attr.Register": ["Lean.Meta.Tactic.Simp.SimpTheorems"],
  "Mathlib.Tactic.Attr.Core": ["Mathlib.Tactic.Attr.Register"],
  "Mathlib.Probability.Notation":
  ["Mathlib.MeasureTheory.Decomposition.Lebesgue",
   "Mathlib.MeasureTheory.Function.ConditionalExpectation.Basic"],
  "Mathlib.LinearAlgebra.AffineSpace.Basic": ["Mathlib.Algebra.AddTorsor"],
  "Mathlib.Init.Data.Nat.GCD": ["Std.Data.Nat.Gcd"],
  "Mathlib.Data.Rat.Init": ["Std.Data.Rat.Basic"],
  "Mathlib.Control.Monad.Basic": ["Mathlib.Init.Control.Lawful"],
  "Mathlib.AlgebraicTopology.DoldKan.Notations":
  ["Mathlib.AlgebraicTopology.AlternatingFaceMapComplex"]}}